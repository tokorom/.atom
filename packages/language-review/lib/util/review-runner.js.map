{"version":3,"file":"review-runner.js","sourceRoot":"","sources":["review-runner.ts"],"names":[],"mappings":"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","sourcesContent":["// check this https://github.com/yujinakayama/atom-lint/blob/master/lib/lint-runner.coffee\n\nimport EmitterSubscriberBase from \"./emissary-helper\";\nimport * as V from \"./const\";\nimport * as logger from \"./logger\";\n\nimport * as ReVIEW from \"review.js\";\nimport * as path from \"path\";\nimport * as fs from \"fs\";\n\nimport * as PrhValidator from \"reviewjs-prh\";\n\n// 別の.reを参照する構文を生かしておくとビルドエラーになるので潰しておく。\nclass SingleFileAnalyzer extends ReVIEW.DefaultAnalyzer {\n    inline_chap(builder: /* AcceptableSyntaxBuilder */ any) {\n        this.inlineDecorationSyntax(builder, \"chap\");\n    }\n\n    inline_title(builder: /* AcceptableSyntaxBuilder */ any) {\n        this.inlineDecorationSyntax(builder, \"title\");\n    }\n\n    inline_chapref(builder: /* AcceptableSyntaxBuilder */ any) {\n        this.inlineDecorationSyntax(builder, \"chapref\");\n    }\n}\n\n// 別の.reを参照する構文を生かしておくとビルドエラーになるので潰しておく。\nclass SingleFileHTMLBuilder extends ReVIEW.HtmlBuilder {\n    inline_chap(process: /* BuilderProcess */ any, _node: /* InlineElementSyntaxTree */ any) {\n        process.out(\"第X章\");\n        return false;\n    }\n\n    inline_title(process: /* BuilderProcess */ any, _node: /* InlineElementSyntaxTree */ any) {\n        process.out(\"章タイトル(仮)\");\n        return false;\n    }\n\n    inline_chapref(process: /* BuilderProcess */ any, _node: /* InlineElementSyntaxTree */ any) {\n        process.out(\"第X章「章タイトル(仮)」\");\n        return false;\n    }\n}\n\nexport default class ReVIEWRunner extends EmitterSubscriberBase {\n\n    private watcher: ContentWatcher;\n\n    editor: AtomCore.IEditor;\n\n    lastAcceptableSyntaxes: ReVIEW.AcceptableSyntaxes;\n    lastSymbols: ReVIEW.Symbol[];\n    lastReports: ReVIEW.ProcessReport[];\n    lastBook: ReVIEW.Book;\n\n    constructor(params: { editor: AtomCore.IEditor; }) {\n        super();\n\n        this.editor = params.editor;\n\n        if (this.editor) {\n            this.watcher = new EditorContentWatcher(this, this.editor);\n        } else {\n            throw new Error(\"editor is required\");\n        }\n    }\n\n    startWatching(): void {\n        logger.log();\n        this.watcher.startWatching();\n    }\n\n    stopWatching(): void {\n        logger.log();\n        this.watcher.stopWatching();\n    }\n\n    activate(): void {\n        logger.log();\n        this.watcher.activate();\n    }\n\n    deactivate(): void {\n        logger.log();\n        this.watcher.deactivate();\n    }\n\n    on(eventNames: \"start\", callback: () => any): any;\n    on(eventNames: \"syntax\", callback: (acceptableSyntaxes: ReVIEW.AcceptableSyntaxes) => any): any;\n    on(eventNames: \"symbol\", callback: (symbols: ReVIEW.Symbol[]) => any): any;\n    on(eventNames: \"report\", callback: (reports: ReVIEW.ProcessReport[]) => any): any;\n    on(eventNames: \"compile-success\", callback: (book: ReVIEW.Book) => any): any;\n    on(eventNames: \"compile-failed\", callback: (book: ReVIEW.Book) => any): any;\n    on(eventNames: string, handler: Function): any;\n\n    // 後でReVIEWRunner.emissarified();している。特殊化されたオーバーロードのため。\n    on(_eventNames: string, _handler: Function): any {\n        throw new Error();\n    }\n\n    doCompile(): void {\n        logger.log();\n        this.emit(\"start\");\n        let currentPath: string = this.watcher.getFilePath() || \"ch01.re\";\n        let basePath: string = path.isAbsolute(currentPath) ? path.dirname(currentPath) : undefined;\n        let filename: string = path.basename(currentPath);\n\n        setTimeout(() => {\n            let files: { [path: string]: string; } = {};\n            files[filename] = this.watcher.getContent();\n            let result: { [path: string]: string; } = {\n            };\n            let validators: ReVIEW.Validator[] = [\n                new ReVIEW.DefaultValidator(),\n            ];\n            let dirName: string;\n            if (this.editor) {\n                dirName = this.editor.getBuffer().file.getParent().getPath();\n            }\n            let prhFilePath = path.join(dirName, \"prh.yml\");\n            if (fs.existsSync(prhFilePath)) {\n                try {\n                    validators.push(new PrhValidator.TextValidator(prhFilePath));\n                } catch (e) {\n                    atom.notifications.addWarning(\"prh.ymlの定義に誤りがあります。\\n\" + e);\n                }\n            }\n\n            ReVIEW.start(review => {\n                review.initConfig({\n                    basePath: basePath,\n                    read: path => Promise.resolve(files[path]),\n                    write: (path, content) => {\n                        result[path] = content;\n                        return Promise.resolve<void>(null);\n                    },\n                    listener: {\n                        onAcceptables: acceptableSyntaxes => {\n                            logger.log(acceptableSyntaxes);\n                            this.lastAcceptableSyntaxes = acceptableSyntaxes;\n                            this.emit(\"syntax\", acceptableSyntaxes);\n                        },\n                        onSymbols: symbols => {\n                            logger.log(symbols);\n                            this.lastSymbols = symbols;\n                            this.emit(\"symbol\", symbols);\n                        },\n                        onReports: reports => {\n                            logger.log(reports);\n                            this.lastReports = reports;\n                            this.emit(\"report\", reports);\n                        },\n                        onCompileSuccess: book => {\n                            logger.log(book);\n                            this.lastBook = book;\n                            this.emit(\"compile-success\", book);\n                        },\n                        onCompileFailed: book => {\n                            logger.log();\n                            this.lastBook = null;\n                            this.emit(\"compile-failed\", book);\n                        },\n                    },\n                    analyzer: new SingleFileAnalyzer(),\n                    validators: validators,\n                    builders: [new SingleFileHTMLBuilder(false)],\n                    book: {\n                        contents: [\n                            filename,\n                        ],\n                    },\n                });\n            });\n        });\n    }\n\n    getContent() {\n        return this.watcher.getContent();\n    }\n\n    getFilePath() {\n        return this.watcher.getFilePath();\n    }\n}\n\nReVIEWRunner.emissarified();\n\ninterface ContentWatcher {\n    startWatching(): void;\n    stopWatching(): void;\n    activate(): void;\n    deactivate(): void;\n    getContent(): string;\n    getFilePath(): string;\n}\n\nclass EditorContentWatcher extends EmitterSubscriberBase implements ContentWatcher {\n\n    buffer: TextBuffer.ITextBuffer;\n\n    grammerChangeSubscription: AtomCore.IDisposable;\n    wasAlreadyActivated: boolean;\n    bufferSubscriptions: AtomCore.IDisposable[] = [];\n    lastKeyHitTimeoutId: any;\n    static IN_EDIT_COMPILE_TIMEOUT: number = 3000;\n\n    constructor(public runner: ReVIEWRunner, public editor: AtomCore.IEditor) {\n        super();\n        this.buffer = this.editor.getBuffer();\n    }\n\n    startWatching(): void {\n        logger.log();\n        if (this.grammerChangeSubscription) {\n            return;\n        }\n\n        this.configureRunner();\n\n        this.grammerChangeSubscription = this.editor.onDidChangeGrammar(() => this.configureRunner());\n    }\n\n    stopWatching(): void {\n        logger.log();\n        if (!this.grammerChangeSubscription) {\n            return;\n        }\n\n        this.grammerChangeSubscription.dispose();\n        this.grammerChangeSubscription = null;\n    }\n\n    configureRunner(): void {\n        let scopeName = this.editor.getGrammar().scopeName;\n        logger.log(\"configureRunner grammar \" + scopeName);\n        if (V.reviewScopeName === scopeName) {\n            this.activate();\n        } else {\n            this.deactivate();\n        }\n    }\n\n    triggerCompile(withDelay: boolean = false): void {\n        if (this.lastKeyHitTimeoutId) {\n            clearTimeout(this.lastKeyHitTimeoutId);\n        }\n        if (withDelay) {\n            this.lastKeyHitTimeoutId = setTimeout(() => {\n                this.lastKeyHitTimeoutId = null;\n                this.runner.doCompile();\n            }, EditorContentWatcher.IN_EDIT_COMPILE_TIMEOUT);\n        } else {\n            this.lastKeyHitTimeoutId = null;\n            this.runner.doCompile();\n        }\n    }\n\n    activate(): void {\n        logger.log();\n        if (!this.wasAlreadyActivated) {\n            this.emit(\"activate\");\n        }\n        this.wasAlreadyActivated = true;\n        this.runner.doCompile();\n        if (this.bufferSubscriptions.length !== 0) {\n            return;\n        }\n        this.bufferSubscriptions.push(this.buffer.onDidChange(() => this.triggerCompile(true)));\n        this.bufferSubscriptions.push(this.buffer.onDidSave(() => this.triggerCompile()));\n        this.bufferSubscriptions.push(this.buffer.onDidReload(() => this.triggerCompile()));\n    }\n\n    deactivate(): void {\n        logger.log();\n        this.stopWatching();\n        this.bufferSubscriptions.forEach(subscription => subscription.dispose());\n        this.bufferSubscriptions = [];\n        this.runner.emit(\"deactivate\");\n    }\n\n    getContent(): string {\n        return this.editor.buffer.getText();\n    }\n\n    getFilePath(): string {\n        return this.buffer.getUri();\n    }\n}\n"]}
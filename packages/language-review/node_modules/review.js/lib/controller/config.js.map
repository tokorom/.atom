{"version":3,"file":"config.js","sourceRoot":"","sources":["config.ts"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport { Builder, DefaultBuilder } from \"../builder/builder\";\nimport { BookStructure, ConfigRaw, Options, ConfigListener } from \"./configRaw\";\nimport { ProcessReport, ReportLevel, Book } from \"../model/compilerModel\";\nimport { Analyzer, DefaultAnalyzer } from \"../parser/analyzer\";\nimport { Validator, DefaultValidator } from \"../parser/validator\";\n\nimport { IO } from \"../utils/utils\";\n\nexport class Config {\n    _builders: Builder[];\n    _bookStructure: BookStructure;\n\n    constructor(public original: ConfigRaw) {\n    }\n\n    get read(): (path: string) => Promise<string> {\n        throw new Error(\"please implements this method\");\n    }\n\n    get write(): (path: string, data: string) => Promise<void> {\n        throw new Error(\"please implements this method\");\n    }\n\n    get exists(): (path: string) => Promise<{ path: string; result: boolean; }> {\n        throw new Error(\"please implements this method\");\n    }\n\n    get analyzer(): Analyzer {\n        return this.original.analyzer || new DefaultAnalyzer();\n    }\n\n    get validators(): Validator[] {\n        let config = this.original;\n        if (!config.validators || config.validators.length === 0) {\n            return [new DefaultValidator()];\n        } else if (!Array.isArray(config.validators)) {\n            return [<any>config.validators];\n        } else {\n            return config.validators;\n        }\n    }\n\n    get builders(): Builder[] {\n        if (this._builders) {\n            return this._builders;\n        }\n\n        let config = this.original;\n        if (!config.builders || config.builders.length === 0) {\n            // TODO DefaultBuilder は微妙感\n            this._builders = [new DefaultBuilder()];\n        } else if (!Array.isArray(config.builders)) {\n            this._builders = [<any>config.builders];\n        } else {\n            this._builders = config.builders;\n        }\n        return this._builders;\n    }\n\n    get listener(): ConfigListener {\n        throw new Error(\"please implements this method\");\n    }\n\n    get book(): BookStructure {\n        if (!this._bookStructure) {\n            this._bookStructure = BookStructure.createBook(this.original.book);\n        }\n        return this._bookStructure;\n    }\n\n    resolvePath(_path: string): string {\n        throw new Error(\"please implements this method\");\n    }\n}\n\nexport class NodeJSConfig extends Config {\n    _listener: ConfigListener;\n\n    constructor(public options: Options, public original: ConfigRaw) {\n        super(original);\n    }\n\n    get read(): (path: string) => Promise<string> {\n        return this.original.read || IO.read;\n    }\n\n    get write(): (path: string, data: string) => Promise<void> {\n        return this.original.write || IO.write;\n    }\n\n    get exists(): (path: string) => Promise<{ path: string; result: boolean; }> {\n        return path => {\n            /* tslint:disable:no-require-imports */\n            let fs = require(\"fs\");\n            let _path = require(\"path\");\n            /* tslint:enable:no-require-imports */\n\n            let basePath = this.original.basePath || __dirname;\n            let promise = new Promise<{ path: string; result: boolean; }>(resolve => {\n                fs.exists(_path.resolve(basePath, path), (result: boolean) => {\n                    resolve({ path: path, result: result });\n                });\n            });\n            return promise;\n        };\n    }\n\n    get listener(): ConfigListener {\n        if (this._listener) {\n            return this._listener;\n        }\n\n        let listener: ConfigListener = this.original.listener || {\n        };\n        listener.onAcceptables = listener.onAcceptables || (() => {\n        });\n        listener.onSymbols = listener.onSymbols || (() => {\n        });\n        listener.onReports = listener.onReports || this.onReports;\n        listener.onCompileSuccess = listener.onCompileSuccess || this.onCompileSuccess;\n        listener.onCompileFailed = listener.onCompileFailed || this.onCompileFailed;\n\n        this._listener = listener;\n        return this._listener;\n    }\n\n    onReports(reports: ProcessReport[]): void {\n        /* tslint:disable:no-require-imports */\n        let colors = require(\"colors\");\n        /* tslint:enable:no-require-imports */\n        colors.setTheme({\n            info: \"cyan\",\n            warn: \"yellow\",\n            error: \"red\"\n        });\n\n        reports.forEach(report => {\n            let message = \"\";\n            if (report.chapter) {\n                message += report.chapter.name + \" \";\n            }\n            if (report.nodes) {\n                report.nodes.forEach(node => {\n                    message += \"[\" + node.location.start.line + \",\" + node.location.start.column + \"] \";\n                });\n            }\n            message += report.message;\n            if (report.level === ReportLevel.Error) {\n                console.warn(message.error);\n            } else if (report.level === ReportLevel.Warning) {\n                console.error(message.warn);\n            } else if (report.level === ReportLevel.Info) {\n                console.info(message.info);\n            } else {\n                throw new Error(\"unknown report level.\");\n            }\n        });\n    }\n\n    onCompileSuccess(_book: Book) {\n        process.exit(0);\n    }\n\n    onCompileFailed() {\n        process.exit(1);\n    }\n\n    resolvePath(path: string): string {\n        /* tslint:disable:no-require-imports */\n        let p = require(\"path\");\n        /* tslint:enable:no-require-imports */\n        let base = this.options.base || \"./\";\n        return p.join(base, path);\n    }\n}\n\nexport class WebBrowserConfig extends Config {\n    _listener: ConfigListener;\n\n    constructor(public options: Options, public original: ConfigRaw) {\n        super(original);\n    }\n\n    get read(): (path: string) => Promise<string> {\n        return this.original.read || ((): Promise<string> => {\n            throw new Error(\"please implement config.read method\");\n        });\n    }\n\n    get write(): (path: string, data: string) => Promise<void> {\n        return this.original.write || ((): Promise<void> => {\n            throw new Error(\"please implement config.write method\");\n        });\n    }\n\n    get exists(): (path: string) => Promise<{ path: string; result: boolean; }> {\n        return path => {\n            if (window.location.protocol === \"file:\") {\n                return this._existsFileScheme(path);\n            } else {\n                return this._existsHttpScheme(path);\n            }\n        };\n    }\n\n    _existsFileScheme(_path: string): Promise<{ path: string; result: boolean; }> {\n        let promise = new Promise<{ path: string; result: boolean; }>(resolve => {\n            let canvas = document.createElement('canvas');\n            canvas.width = 200;\n            canvas.height = 14;\n            let ctx = <CanvasRenderingContext2D>canvas.getContext(\"2d\");\n            ctx.fillText(\"file://では画像の存在チェックができません\", 2, 10);\n            let dataUrl = canvas.toDataURL();\n            resolve({ path: dataUrl, result: true });\n        });\n        return promise;\n    }\n\n    _existsHttpScheme(path: string): Promise<{ path: string; result: boolean; }> {\n        let promise = new Promise<{ path: string; result: boolean; }>(resolve => {\n            try {\n                let xhr = new XMLHttpRequest();\n                xhr.onreadystatechange = function() {\n                    if (xhr.readyState === 4) {\n                        if (xhr.status === 200 || xhr.status === 304) {\n                            resolve({ path: path, result: true });\n                        } else {\n                            resolve({ path: path, result: false });\n                        }\n                    }\n                };\n                xhr.open(\"GET\", path);\n                // If-Modified-Since をDate.now()で送って304返して貰ったほうが効率が良いのでは という発想\n                xhr.setRequestHeader(\"If-Modified-Since\", new Date().toUTCString());\n                xhr.send();\n            } catch (e) {\n                if (e instanceof DOMException) {\n                    let de: DOMException = <DOMException>e;\n                    console.log(de.message);\n                }\n                resolve({ path: path, result: false });\n            }\n        });\n        return promise;\n    }\n\n    get listener(): ConfigListener {\n        if (this._listener) {\n            return this._listener;\n        }\n\n        let listener: ConfigListener = this.original.listener || {\n        };\n        listener.onAcceptables = listener.onAcceptables || (() => {\n        });\n        listener.onSymbols = listener.onSymbols || (() => {\n        });\n        listener.onReports = listener.onReports || this.onReports;\n        listener.onCompileSuccess = listener.onCompileSuccess || this.onCompileSuccess;\n        listener.onCompileFailed = listener.onCompileFailed || this.onCompileFailed;\n\n        this._listener = listener;\n        return this._listener;\n    }\n\n    onReports(reports: ProcessReport[]): void {\n        reports.forEach(report => {\n            let message = \"\";\n            if (report.chapter) {\n                message += report.chapter.name + \" \";\n            }\n            if (report.nodes) {\n                report.nodes.forEach(node => {\n                    message += \"[\" + node.location.start.line + \",\" + node.location.start.column + \"] \";\n                });\n            }\n            message += report.message;\n            if (report.level === ReportLevel.Error) {\n                console.warn(message);\n            } else if (report.level === ReportLevel.Warning) {\n                console.error(message);\n            } else if (report.level === ReportLevel.Info) {\n                console.info(message);\n            } else {\n                throw new Error(\"unknown report level.\");\n            }\n        });\n    }\n\n    onCompileSuccess(_book: Book) {\n    }\n\n    onCompileFailed(_book?: Book) {\n    }\n\n    resolvePath(path: string): string {\n        if (!this.options.base) {\n            return path;\n        }\n\n        let base = this.options.base;\n        if (!this.endWith(base, \"/\") && !this.startWith(path, \"/\")) {\n            base += \"/\";\n        }\n        return base + path;\n    }\n\n    private startWith(str: string, target: string): boolean {\n        return str.indexOf(target) === 0;\n    }\n\n    private endWith(str: string, target: string): boolean {\n        return str.indexOf(target, str.length - target.length) !== -1;\n    }\n}\n"]}
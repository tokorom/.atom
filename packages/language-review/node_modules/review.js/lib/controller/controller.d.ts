import { Book } from "../model/compilerModel";
import { Options, ConfigRaw } from "./configRaw";
import { TextBuilder } from "../builder/textBuilder";
import { HtmlBuilder } from "../builder/htmlBuilder";
/**
 * ReVIEW文書を処理するためのコントローラ。
 * 処理の起点。
 */
export declare class Controller {
    options: Options;
    builders: {
        TextBuilder: typeof TextBuilder;
        HtmlBuilder: typeof HtmlBuilder;
    };
    private config;
    constructor(options?: Options);
    /**
     * 設定の初期化を行う。
     * 通常、 ReVIEW.start 経由で呼び出される。
     * @param data
     */
    initConfig(data: ConfigRaw): void;
    process(): Promise<Book>;
    acceptableSyntaxes(book: Book): Promise<Book>;
    toContentChunk(book: Book): Book;
    readReVIEWFiles(book: Book): Promise<Book>;
    parseContent(book: Book): Book;
    preprocessContent(book: Book): Book;
    processContent(book: Book): Promise<Book>;
    writeContent(book: Book): Promise<Book>;
    compileFinished(book: Book): Book;
    handleError(err: any): Promise<Book>;
}

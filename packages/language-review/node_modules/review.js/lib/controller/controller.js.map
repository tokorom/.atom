{"version":3,"file":"controller.js","sourceRoot":"","sources":["controller.ts"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport * as PEG from \"../../resources/grammar\";\n\nimport { Book, ContentChunk, ReportLevel, Symbol } from \"../model/compilerModel\";\n\nimport { SyntaxTree } from \"../parser/parser\";\nimport { Config, NodeJSConfig, WebBrowserConfig } from \"./config\";\nimport { Options, ConfigRaw, ContentStructure } from \"./configRaw\";\n\nimport { parse, ChapterSyntaxTree } from \"../parser/parser\";\n\nimport { SyntaxPreprocessor } from \"../parser/preprocessor\";\n\nimport { TextBuilder } from \"../builder/textBuilder\";\nimport { HtmlBuilder } from \"../builder/htmlBuilder\";\n\nimport { visit } from \"../parser/walker\";\n\nimport { isNodeJS } from \"../utils/utils\";\n\n/**\n * ReVIEW文書を処理するためのコントローラ。\n * 処理の起点。\n */\nexport class Controller {\n    builders = { TextBuilder, HtmlBuilder };\n\n    private config: Config;\n\n    constructor(public options: Options = {}) {\n    }\n\n\t/**\n\t * 設定の初期化を行う。\n\t * 通常、 ReVIEW.start 経由で呼び出される。\n\t * @param data\n\t */\n    initConfig(data: ConfigRaw): void {\n        if (isNodeJS()) {\n            this.config = new NodeJSConfig(this.options, data);\n        } else {\n            this.config = new WebBrowserConfig(this.options, data);\n        }\n    }\n\n    process(): Promise<Book> {\n        return Promise.resolve(new Book(this.config))\n            .then(book => this.acceptableSyntaxes(book))\n            .then(book => this.toContentChunk(book))\n            .then(book => this.readReVIEWFiles(book))\n            .then(book => this.parseContent(book))\n            .then(book => this.preprocessContent(book))\n            .then(book => this.processContent(book))\n            .then(book => this.writeContent(book))\n            .then(book => this.compileFinished(book))\n            .catch(err => this.handleError(err));\n    }\n\n    acceptableSyntaxes(book: Book): Promise<Book> {\n        book.acceptableSyntaxes = book.config.analyzer.getAcceptableSyntaxes();\n\n        if (book.config.listener.onAcceptables!(book.acceptableSyntaxes) === false) {\n            // false が帰ってきたら処理を中断する (undefined でも継続)\n            book.config.listener.onCompileFailed!();\n            return Promise.reject<Book>(null);\n        }\n\n        return Promise.resolve(book);\n    }\n\n    toContentChunk(book: Book): Book {\n        let convert = (c: ContentStructure, parent?: ContentChunk | null): ContentChunk | null => {\n            let chunk: ContentChunk | null = null;\n            if (c.part) {\n                chunk = new ContentChunk(book, c.part.file);\n                c.part.chapters.forEach(c => {\n                    convert(ContentStructure.createChapter(c) !, chunk);\n                });\n            } else if (c.chapter) {\n                chunk = new ContentChunk(book, parent!, c.chapter.file);\n            } else {\n                return null;\n            }\n            if (parent) {\n                parent.nodes.push(chunk);\n            }\n            return chunk;\n        };\n\n        book.predef = this.config.book.predef.map(c => convert(c) !);\n        book.contents = this.config.book.contents.map(c => convert(c) !);\n        book.appendix = this.config.book.appendix.map(c => convert(c) !);\n        book.postdef = this.config.book.postdef.map(c => convert(c) !);\n\n        return book;\n    }\n\n    readReVIEWFiles(book: Book): Promise<Book> {\n        let promises: Promise<any>[] = [];\n\n        let read = (chunk: ContentChunk) => {\n            let resolvedPath = book.config.resolvePath(chunk.name);\n            promises.push(book.config.read(resolvedPath).then(input => chunk.input = input));\n            chunk.nodes.forEach(chunk => read(chunk));\n        };\n\n        book.predef.forEach(chunk => read(chunk));\n        book.contents.forEach(chunk => read(chunk));\n        book.appendix.forEach(chunk => read(chunk));\n        book.postdef.forEach(chunk => read(chunk));\n\n        return Promise.all(promises).then(() => book);\n    }\n\n    parseContent(book: Book): Book {\n        let _parse = (chunk: ContentChunk) => {\n            try {\n                chunk.tree = parse(chunk.input);\n            } catch (e) {\n                if (!(e instanceof PEG.SyntaxError)) {\n                    throw e;\n                }\n                let se: PEG.SyntaxError = e;\n                let errorNode = new SyntaxTree({\n                    syntax: se.name,\n                    location: {\n                        start: {\n                            line: se.line,\n                            column: se.column,\n                            offset: se.offset\n                        },\n                        end: void 0, // TODO SyntaxError が置き換えられたらなんとかできるかも…\n                    }\n                });\n                chunk.tree = { ast: errorNode, cst: null! }; // TODO null! をやめる\n                // TODO エラー表示が必要 process.error 的なやつ\n            }\n            chunk.nodes.forEach(chunk => _parse(chunk));\n        };\n\n        book.predef.forEach(chunk => _parse(chunk));\n        book.contents.forEach(chunk => _parse(chunk));\n        book.appendix.forEach(chunk => _parse(chunk));\n        book.predef.forEach(chunk => _parse(chunk));\n\n        return book;\n    }\n\n    preprocessContent(book: Book): Book {\n        // Chapterに採番を行う\n        let numberingChapter = (chunk: ContentChunk, counter: { [index: number]: number; }) => {\n            // TODO partにも分け隔てなく採番してるけど間違ってるっしょ\n            let chapters: ChapterSyntaxTree[] = [];\n            visit(chunk.tree.ast, {\n                visitDefaultPre: (_node) => {\n                },\n                visitChapterPre: (node: ChapterSyntaxTree) => {\n                    chapters.push(node);\n                }\n            });\n            let max = 0;\n            let currentLevel = 1;\n            chapters.forEach((chapter) => {\n                let level = chapter.headline.level;\n                max = Math.max(max, level);\n                let i: number;\n                if (currentLevel > level) {\n                    for (i = level + 1; i <= max; i++) {\n                        counter[i] = 0;\n                    }\n                } else if (currentLevel < level) {\n                    for (i = level; i <= max; i++) {\n                        counter[i] = 0;\n                    }\n                }\n                currentLevel = level;\n                counter[level] = (counter[level] || 0) + 1;\n                chapter.no = counter[level];\n            });\n            chunk.no = counter[1];\n            chunk.nodes.forEach(chunk => numberingChapter(chunk, counter));\n        };\n        let numberingChapters = (chunks: ContentChunk[], counter: { [index: number]: number; } = {}) => {\n            chunks.forEach(chunk => numberingChapter(chunk, counter));\n        };\n\n        numberingChapters(book.predef);\n        numberingChapters(book.contents);\n        numberingChapters(book.appendix);\n        numberingChapters(book.postdef);\n\n        let preprocessor = new SyntaxPreprocessor();\n        preprocessor.start(book);\n        return book;\n    }\n\n    processContent(book: Book): Promise<Book> {\n        book.config.validators.forEach(validator => {\n            validator.start(book, book.acceptableSyntaxes, this.config.builders);\n        });\n        if (book.reports.some(report => report.level === ReportLevel.Error)) {\n            // エラーがあったら処理中断\n            return Promise.resolve(book);\n        }\n\n        let symbols = book.allChunks.reduce<Symbol[]>((p, c) => p.concat(c.process.symbols), []);\n        if (this.config.listener.onSymbols!(symbols) === false) {\n            // false が帰ってきたら処理を中断する (undefined でも継続)\n            return Promise.resolve(book);\n        }\n\n        return Promise.all(this.config.builders.map(builder => builder.init(book))).then(() => book);\n    }\n\n    writeContent(book: Book): Promise<Book> {\n        let promises: Promise<any>[] = [];\n\n        let write = (chunk: ContentChunk) => {\n            chunk.builderProcesses.forEach(process => {\n                let baseName = chunk.name.substr(0, chunk.name.lastIndexOf(\".re\"));\n                let fileName = baseName + \".\" + process.builder.extention;\n                promises.push(this.config.write(fileName, process.result));\n            });\n            chunk.nodes.forEach(chunk => write(chunk));\n        };\n\n        book.predef.forEach(chunk => write(chunk));\n        book.contents.forEach(chunk => write(chunk));\n        book.appendix.forEach(chunk => write(chunk));\n        book.postdef.forEach(chunk => write(chunk));\n\n        return Promise.all(promises).then(() => book);\n    }\n\n    compileFinished(book: Book): Book {\n        book.config.listener.onReports!(book.reports);\n        if (!book.hasError) {\n            book.config.listener.onCompileSuccess!(book);\n        } else {\n            book.config.listener.onCompileFailed!(book);\n        }\n\n        return book;\n    }\n\n    handleError(err: any): Promise<Book> {\n        // TODO 指定された .re が存在しない場合ここにくる…\n        console.error(\"unexpected error\", err);\n        if (err && err.stack) {\n            console.error(err.stack);\n        }\n        return Promise.reject<Book>(err);\n    }\n}\n"]}
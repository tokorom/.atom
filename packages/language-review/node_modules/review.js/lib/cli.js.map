{"version":3,"file":"cli.js","sourceRoot":"","sources":["cli.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from \"fs\";\nimport * as path from \"path\";\nimport * as jsyaml from \"js-yaml\";\nimport * as updateNotifier from \"update-notifier\";\n\nimport { start } from \"./index\";\nimport { ConfigRaw } from \"./controller/configRaw\";\nimport { ReportLevel } from \"./model/compilerModel\";\nimport { Exec, target2builder } from \"./utils/utils\";\n\n/* tslint:disable:no-require-imports */\nlet pkg = require(\"../package.json\");\n/* tslint:enable:no-require-imports */\n\nlet notifier = updateNotifier({\n    packageName: pkg.name,\n    packageVersion: pkg.version\n});\nif (notifier.update) {\n    notifier.notify();\n}\n\nlet packageJson = JSON.parse(fs.readFileSync(path.resolve(__dirname, \"../package.json\"), \"utf8\"));\n\nimport * as commandpost from \"commandpost\";\n\ninterface RootOpts {\n    reviewfile: string[];\n    base: string[];\n}\n\nlet root = commandpost\n    .create<RootOpts, {}>(\"reviewjs\")\n    .version(packageJson.version, \"-v, --version\")\n    .option(\"--reviewfile <file>\", \"where is ReVIEWconfig.js?\")\n    .option(\"--base <path>\", \"alternative base path\")\n    .action(() => {\n        process.stdout.write(root.helpText() + '\\n');\n    });\n\ninterface CompileOpts {\n    ast: boolean;\n    target: string[];\n}\n\ninterface CompileArgs {\n    document: string;\n}\n\nroot\n    .subCommand<CompileOpts, CompileArgs>(\"compile [document]\")\n    .description(\"compile ReVIEW document\")\n    .option(\"--ast\", \"output JSON format abstract syntax tree\")\n    .option(\"-t, --target <target>\", \"output format of document\")\n    .action((opts, args) => {\n        // .action((document:string, options:any)=> {\n        let ast = !!opts.ast;\n        let target: string = opts.target[0] || \"html\";\n\n        return new Promise<{ fileName: string; input: string; }>((resolve, reject) => {\n            let input = \"\";\n            if (args.document) {\n                let targetPath = path.resolve(process.cwd(), args.document);\n                if (!fs.existsSync(targetPath)) {\n                    console.error(`${targetPath} not exists`);\n                    reject(null);\n                    return;\n                }\n                input = fs.readFileSync(targetPath, \"utf8\");\n                resolve({ fileName: args.document, input: input });\n            } else {\n                process.stdin.resume();\n                process.stdin.setEncoding(\"utf8\");\n                process.stdin.on(\"data\", (chunk: string) => {\n                    input += chunk;\n                });\n                process.stdin.on(\"end\", () => {\n                    resolve({ fileName: \"content.re\", input: input });\n                });\n            }\n        })\n            .then(value => Exec.singleCompile(value.input, value.fileName, target, null))\n            .then<null>(result => {\n                if (!result.book.hasError && !ast) {\n                    result.book.allChunks[0].builderProcesses.forEach(process => {\n                        console.log(process.result);\n                    });\n                    return null;\n                } else if (!result.book.hasError) {\n                    let jsonString = JSON.stringify(result.book.allChunks[0].tree.ast, null, 2);\n                    console.log(jsonString);\n                    return null;\n                } else {\n                    result.book.reports.forEach(report => {\n                        let log = (_msg: string) => { };\n                        switch (report.level) {\n                            case ReportLevel.Info:\n                                log = process.stdout.write;\n                            case ReportLevel.Warning:\n                                log = process.stderr.write;\n                            case ReportLevel.Error:\n                                log = process.stderr.write;\n                        }\n                        let message = \"\";\n                        report.nodes.forEach(node => {\n                            message += `[${node.location.start.line}, ${node.location.start.column}] `;\n                        });\n                        message += report.message + \"\\n\";\n                        log(message);\n                    });\n\n                    return Promise.reject(\"unexpected error occured\");\n                }\n            });\n    });\n\ninterface BuildArgs {\n    target: string;\n}\n\nroot\n    .subCommand<{}, BuildArgs>(\"build [target]\")\n    .description(\"build book\")\n    .action((_opts, args) => {\n        // .action((target:string, options:any)=> {\n        if (!args.target) {\n            console.log(\"set target to html\");\n        }\n        let target = args.target || \"html\";\n        let reviewfile = root.parsedOpts.reviewfile[0] || \"./ReVIEWconfig.js\";\n\n        function byReVIEWConfig() {\n            /* tslint:disable:no-require-imports */\n            let setup = require(path.resolve(process.cwd(), reviewfile));\n            /* tslint:enable:no-require-imports */\n            return start(setup, {\n                reviewfile: reviewfile,\n                base: root.parsedOpts.base[0]\n            })\n                .then(book => {\n                    console.log(\"completed!\");\n                    book.reports.forEach(report => {\n                        let log = (_msg: string) => { };\n                        switch (report.level) {\n                            case ReportLevel.Info:\n                                log = process.stdout.write;\n                            case ReportLevel.Warning:\n                                log = process.stderr.write;\n                            case ReportLevel.Error:\n                                log = process.stderr.write;\n                        }\n                        let message = \"\";\n                        report.nodes.forEach(node => {\n                            message += `[${node.location.start.line}, ${node.location.start.column}] `;\n                        });\n                        message += report.message + \"\\n\";\n                        log(message);\n                    });\n                });\n        }\n\n        function byConfigYaml() {\n            let catalogYaml = jsyaml.safeLoad(fs.readFileSync(path.resolve(process.cwd(), \"catalog.yml\"), \"utf8\"));\n\n            let configRaw: ConfigRaw = {\n                builders: [target2builder(target) !],\n                book: catalogYaml\n            };\n\n            return start(review => {\n                review.initConfig(configRaw);\n            }, {\n                    reviewfile: reviewfile,\n                    base: root.parsedOpts.base[0]\n                })\n                .then(book => {\n                    process.stdout.write(\"completed!\\n\");\n                    book.reports.forEach(report => {\n                        let log = (_msg: string) => { };\n                        switch (report.level) {\n                            case ReportLevel.Info:\n                                log = process.stdout.write;\n                            case ReportLevel.Warning:\n                                log = process.stderr.write;\n                            case ReportLevel.Error:\n                                log = process.stderr.write;\n                        }\n                        let message = \"\";\n                        report.nodes.forEach(node => {\n                            message += `[${node.location.start.line}, ${node.location.start.column}] `;\n                        });\n                        message += report.message + \"\\n\";\n                        log(message);\n                    });\n                });\n        }\n\n        if (fs.existsSync(path.resolve(process.cwd(), reviewfile))) {\n            return byReVIEWConfig();\n        } else if (fs.existsSync(path.resolve(process.cwd(), \"config.yml\"))) {\n            return byConfigYaml();\n        } else {\n            throw new Error(\"can not found ReVIEWconfig.js or config.yml\");\n        }\n    });\n\ncommandpost\n    .exec(root, process.argv)\n    .then(() => {\n        process.stdout.write(\"\");\n        process.stderr.write(\"\");\n        process.exit(0);\n    }, err => {\n        console.error(\"unexpected error\", err);\n        if (err.stack) {\n            console.error(err.stack);\n        }\n        process.stdout.write(\"\");\n        process.stderr.write(\"\");\n        process.exit(1);\n    });\n"]}
{"version":3,"file":"utils.js","sourceRoot":"","sources":["utils.ts"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport { ConfigRaw } from \"../controller/configRaw\";\nimport { Book, Process, BuilderProcess } from \"../model/compilerModel\";\n\nimport { SyntaxTree, NodeSyntaxTree, HeadlineSyntaxTree, UlistElementSyntaxTree, DlistElementSyntaxTree, OlistElementSyntaxTree, TextNodeSyntaxTree, ChapterSyntaxTree, ColumnSyntaxTree } from \"../parser/parser\";\nimport { Builder } from \"../builder/builder\";\nimport { TextBuilder } from \"../builder/textBuilder\";\nimport { HtmlBuilder } from \"../builder/htmlBuilder\";\nimport { DefaultAnalyzer } from \"../parser/analyzer\";\nimport { DefaultValidator } from \"../parser/validator\";\nimport { TreeVisitorArg, visit, walk } from \"../parser/walker\";\nimport { start } from \"../index\";\n\ndeclare let define: any; // TODO コンパイル通す用\nfalse && Book; // tslint消し\n\n/**\n * ブラウザ上での実行かどうかを判別する。\n * @returns {boolean}\n */\nexport function isBrowser(): boolean {\n    \"use strict\";\n\n    return typeof window !== \"undefined\";\n}\n\ndeclare var atom: any;\n\n/**\n * Node.js上での実行かどうかを判別する。\n * @returns {boolean}\n */\nexport function isNodeJS(): boolean {\n    \"use strict\";\n\n    if (typeof atom !== \"undefined\") {\n        // atomはNode.jsと判定したいけどwindowあるしbrowserify環境下と区別するために特別扱いする\n        return true;\n    }\n\n    return !isBrowser() && !isAMD() && typeof exports === \"object\";\n}\n\n/**\n * AMD環境下での実行かどうかを判別する。\n * @returns {boolean|any}\n */\nexport function isAMD(): boolean {\n    \"use strict\";\n\n    return typeof define === \"function\" && define.amd;\n}\n\n/**\n * ネストしたArrayを潰して平らにする。\n * Arrayかどうかの判定は Array.isArray を利用。\n * @param data\n * @returns {*[]}\n */\nexport function flatten(data: any[]): any[] {\n    \"use strict\";\n\n    if (data.some((d) => Array.isArray(d))) {\n        return flatten(data.reduce((p: any[], c: any[]) => p.concat(c), []));\n    } else {\n        return data;\n    }\n}\n\n/**\n * SyntaxTree全体 を String に変換する。\n * @param process\n * @param node\n */\nexport function nodeToString(process: Process, node: SyntaxTree): string;\nexport function nodeToString(process: BuilderProcess, node: SyntaxTree): string;\nexport function nodeToString(process: any, node: SyntaxTree): string {\n    \"use strict\";\n\n    return process.input.substring(node.location.start.offset, node.location.end!.offset);\n}\n\n/**\n * SyntaxTreeの中身部分 を String に変換する。\n * @param process\n * @param node\n */\nexport function nodeContentToString(process: Process, node: SyntaxTree): string;\nexport function nodeContentToString(process: BuilderProcess, node: SyntaxTree): string;\nexport function nodeContentToString(process: any, node: SyntaxTree): string {\n    \"use strict\";\n\n    let minPos = Number.MAX_VALUE;\n    let maxPos = -1;\n    // child\n    let childVisitor: TreeVisitorArg = {\n        visitDefaultPre: (node: SyntaxTree) => {\n            minPos = Math.min(minPos, node.location.start.offset);\n            maxPos = Math.max(maxPos, node.location.end!.offset!);\n        }\n    };\n    // root (子要素だけ抽出したい)\n    visit(node, {\n        visitDefaultPre: (_node: SyntaxTree) => {\n        },\n        visitNodePre: (node: NodeSyntaxTree) => {\n            // Chapter, Inline, Block もここに来る\n            node.childNodes.forEach(child => visit(child, childVisitor));\n            return false;\n        },\n        visitHeadlinePre: (node: HeadlineSyntaxTree) => {\n            visit(node.caption, childVisitor);\n            return false;\n        },\n        visitUlistPre: (node: UlistElementSyntaxTree) => {\n            visit(node.text, childVisitor);\n            return false;\n        },\n        visitDlistPre: (node: DlistElementSyntaxTree) => {\n            visit(node.text, childVisitor);\n            visit(node.content, childVisitor);\n            return false;\n        },\n        visitOlistPre: (node: OlistElementSyntaxTree) => {\n            visit(node.text, childVisitor);\n            return false;\n        },\n        visitTextPre: (_text: TextNodeSyntaxTree) => {\n            visit(node, childVisitor);\n            return false;\n        }\n    });\n    if (maxPos < 0) {\n        return \"\";\n    } else {\n        return process.input.substring(minPos, maxPos);\n    }\n}\n\n/**\n * 渡した要素から一番近いマッチする要素を探して返す。\n * 見つからなかった場合 null を返す。\n * @param node\n * @param predicate\n * @returns {SyntaxTree}\n */\nexport function findUp(node: SyntaxTree, predicate: (node: SyntaxTree) => boolean): SyntaxTree | null {\n    \"use strict\";\n\n    let result: SyntaxTree | null = null;\n    walk(node, (node: SyntaxTree) => {\n        if (predicate(node)) {\n            result = node;\n            return null;\n        }\n        return node.parentNode;\n    });\n    return result;\n}\n\n/**\n * 渡した要素から直近のChapterを探して返す。\n * 見つからなかった場合 null を返す。\n * もし、渡した要素自身がChapterだった場合、自身を返すのでnode.parentNode を渡すこと。\n * @param node\n * @param level 探すChapterのlevel\n * @returns {ReVIEW.Parse.ChapterSyntaxTree}\n */\nexport function findChapter(node: SyntaxTree, level?: number): ChapterSyntaxTree | null {\n    \"use strict\";\n\n    let chapter: ChapterSyntaxTree | null = null;\n    walk(node, (node: SyntaxTree) => {\n        if (node instanceof ChapterSyntaxTree) {\n            chapter = node;\n            if (typeof level === \"undefined\" || node.level === level) {\n                return null;\n            }\n        }\n        return node.parentNode;\n    });\n    return chapter;\n}\n\nexport function findChapterOrColumn(node: SyntaxTree, level?: number): NodeSyntaxTree | null {\n    \"use strict\";\n\n    let chapter: ChapterSyntaxTree | null = null;\n    let column: ColumnSyntaxTree | null = null;\n    walk(node, (node: SyntaxTree) => {\n        if (node instanceof ChapterSyntaxTree) {\n            chapter = node;\n            if (typeof level === \"undefined\" || node.level === level) {\n                return null;\n            }\n        } else if (node instanceof ColumnSyntaxTree) {\n            column = node;\n            if (typeof level === \"undefined\" || node.level === level) {\n                return null;\n            }\n        }\n        return node.parentNode;\n    });\n    return chapter || column;\n}\n\nexport function target2builder(target: string): Builder | null {\n    \"use strict\";\n\n    // TODO 適当になおす…\n    let builderName = target.charAt(0).toUpperCase() + target.substring(1) + \"Builder\";\n    if (builderName === \"TextBuilder\") {\n        return new TextBuilder();\n    }\n    if (builderName === \"HtmlBuilder\") {\n        return new HtmlBuilder();\n    }\n\t/*\n\tfor (let name in ReVIEW.Build) {\n\t\tif (name === builderName) {\n\t\t\tlet ctor = (<any>ReVIEW.Build)[name];\n\t\t\treturn new ctor();\n\t\t}\n\t}\n\t */\n    return null;\n}\n\n/**\n * Node.jsでのIOをざっくり行うためのモジュール。\n */\nexport module IO {\n    \"use strict\";\n\n\t/**\n\t * 指定されたファイルを読み文字列として返す。\n\t * @param path\n\t * @returns {*}\n\t */\n    export function read(path: string): Promise<string> {\n        /* tslint:disable:no-require-imports */\n        let fs = require(\"fs\");\n        /* tslint:enable:no-require-imports */\n        return new Promise((resolve, reject) => {\n            fs.readFile(path, { encoding: \"utf8\" }, (err: any, data: string) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    resolve(data);\n                }\n            });\n        });\n    }\n\n\t/**\n\t * 指定されたファイルへ文字列を書く。\n\t * @param path\n\t * @param content\n\t */\n    export function write(path: string, content: string): Promise<null> {\n        /* tslint:disable:no-require-imports */\n        let fs = require(\"fs\");\n        /* tslint:enable:no-require-imports */\n        return new Promise<null>((resolve, reject) => {\n            fs.writeFile(path, content, (err: any) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    resolve(null);\n                }\n            });\n        });\n    }\n}\n\n/**\n * 行数から桁数の変換 100行 -> 3桁 \n */\nexport function linesToFigure(lines: number): number {\n    \"use strict\";\n\n    return String(lines).length;\n}\n\nexport function padLeft(str: string, pad: string, maxLength: number): string {\n    \"use strict\";\n\n    if (maxLength <= str.length) {\n        return str;\n    }\n    return stringRepeat(maxLength - str.length, pad) + str;\n}\n\nexport function stringRepeat(times: number, src: string): string {\n    \"use strict\";\n\n    return new Array(times + 1).join(src);\n}\n\n/**\n * 実行するためのヘルパクラス群\n */\nexport module Exec {\n    \"use strict\";\n\n    export function singleCompile(input: string, fileName?: string, target?: string, tmpConfig?: any /* ReVIEW.IConfig */): Promise<{ book: Book; results: any; }> {\n        \"use strict\";\n\n        let config: ConfigRaw = tmpConfig || <any>{};\n        config.read = config.read || (() => Promise.resolve(input));\n\n        config.analyzer = config.analyzer || new DefaultAnalyzer();\n        config.validators = config.validators || [new DefaultValidator()];\n        if (target && target2builder(target) == null) {\n            console.error(target + \" is not exists in builder\");\n            process.exit(1);\n        }\n        config.builders = config.builders;\n        if (!config.builders) {\n            if (target) {\n                let builder = target2builder(target);\n                if (!builder) {\n                    return Promise.reject(`unknown target: ${target}`);\n                }\n                config.builders = [builder];\n            } else {\n                config.builders = [new TextBuilder()];\n            }\n        }\n        config.book = config.book || {\n            contents: [\n                { file: fileName }\n            ]\n        };\n        config.book.contents = config.book.contents || [\n            { file: fileName }\n        ];\n\n        let results: any = {};\n        config.write = config.write || ((path: string, content: any) => results[path] = content);\n\n        config.listener = config.listener || {\n            onReports: () => {\n            },\n            onCompileSuccess: () => {\n            },\n            onCompileFailed: () => {\n            }\n        };\n        config.listener.onReports = config.listener.onReports || (() => {\n        });\n        config.listener.onCompileSuccess = config.listener.onCompileSuccess || (() => {\n        });\n        config.listener.onCompileFailed = config.listener.onCompileFailed || (() => {\n        });\n        let success: boolean;\n        let originalCompileSuccess = config.listener.onCompileSuccess;\n        config.listener.onCompileSuccess = (book) => {\n            success = true;\n            originalCompileSuccess(book);\n        };\n        let originalCompileFailed = config.listener.onCompileFailed;\n        config.listener.onCompileFailed = (book) => {\n            success = false;\n            originalCompileFailed(book);\n        };\n\n        return start((review) => {\n            review.initConfig(config);\n        })\n            .then(book => {\n                return {\n                    book: book,\n                    results: results\n                };\n            });\n    }\n}\n"]}
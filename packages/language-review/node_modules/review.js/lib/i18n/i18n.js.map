{"version":3,"file":"i18n.js","sourceRoot":"","sources":["i18n.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,sBAA2B,SAAS,CAAC,CAAA;AACrC,sBAAyB,gBAAgB,CAAC,CAAA;AAE1C,mBAAmB,MAAM,CAAC,CAAA;AAC1B,mBAAmB,MAAM,CAAC,CAAA;AAE1B,IAAI,KAAK,GAAQ;IACb,EAAE,EAAE,OAAE;IACN,EAAE,EAAE,OAAE;CACT,CAAC;AAEF,IAAI,QAAQ,GAAQ,kBAAU,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;AAEvD,eAAsB,IAAW;IAC7B,YAAY,CAAC;IADK,oBAAW,GAAX,WAAW;IAG7B,QAAQ,GAAG,kBAAU,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/D,CAAC;AAJe,aAAK,QAIpB,CAAA;AAED,IAAI,OAAY,CAAC;AACjB,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,WAAW,IAAU,MAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IACzD,OAAO,GAAS,MAAO,CAAC,OAAO,CAAC;AACpC,CAAC;AAAC,IAAI,CAAC,CAAC;IACJ,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC;AAC5C,CAAC;AACD,gBAAQ,EAAE,CAAC,CAAC,qCAAqC;AAEjD,WAAkB,GAAW;IACzB,YAAY,CAAC;IADc,cAAc;SAAd,WAAc,CAAd,sBAAc,CAAd,IAAc;QAAd,6BAAc;;IAGzC,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC3B,IAAI,IAAI,GAAG,QAAQ,CAAC;IACpB,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI;QACd,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;QAC3B,MAAM,IAAI,KAAK,CAAC,kBAAgB,GAAK,CAAC,CAAC;IAC3C,CAAC;IAED,MAAM,CAAC,OAAO,gBAAC,IAAI,SAAK,IAAI,EAAC,CAAC;AAClC,CAAC;AAbe,SAAC,IAahB,CAAA;AAED,KAAK,EAAE,CAAC","sourcesContent":["\"use strict\";\n\nimport { deepAssign } from \"./utils\";\nimport { isNodeJS } from \"../utils/utils\";\n\nimport { en } from \"./en\";\nimport { ja } from \"./ja\";\n\nlet langs: any = {\n    ja: ja,\n    en: en,\n};\n\nlet resource: any = deepAssign({}, langs.en, langs.ja);\n\nexport function setup(lang = \"ja\") {\n    \"use strict\";\n\n    resource = deepAssign({}, langs.en, langs.ja, langs[lang]);\n}\n\nlet sprintf: any;\nif (typeof window !== \"undefined\" && (<any>window).sprintf) {\n    sprintf = (<any>window).sprintf;\n} else {\n    sprintf = require(\"sprintf-js\").sprintf;\n}\nisNodeJS(); // TODO utilsをi18n.ts内で使わないと実行時エラーになる\n\nexport function t(str: string, ...args: any[]): string {\n    \"use strict\";\n\n    let parts = str.split(\".\");\n    let base = resource;\n    parts.forEach(part => {\n        base = base[part];\n    });\n    if (typeof base !== \"string\") {\n        throw new Error(`unknown key: ${str}`);\n    }\n\n    return sprintf(base, ...args);\n}\n\nsetup();\n"]}
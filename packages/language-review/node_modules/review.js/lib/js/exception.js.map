{"version":3,"file":"exception.js","sourceRoot":"","sources":["exception.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA;IAEI,oBAAmB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;IAClC,CAAC;IAJL;QAAC,OAAO,CAAC,KAAK,CAAC;kBAAA;IAKf,iBAAC;AAAD,CAAC,AAJD,IAIC;AAJY,kBAAU,aAItB,CAAA;AAED,iBAAiB,GAAQ;IACrB,YAAY,CAAC;IAEb,MAAM,CAAC,UAAC,CAAM,IAAK,OAAA,GAAG,EAAH,CAAG,CAAC;AAC3B,CAAC;AAED;IAAmC,iCAAU;IACzC,uBAAY,OAAe;QACvB,kBAAM,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,EAAE,CAAC,CAAO,KAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAC3B,KAAM,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;QACxD,CAAC;IACL,CAAC;IACL,oBAAC;AAAD,CAAC,AAVD,CAAmC,UAAU,GAU5C;AAVY,qBAAa,gBAUzB,CAAA","sourcesContent":["@replace(Error)\nexport class DummyError {\n    name: string;\n    constructor(public message: string) {\n    }\n}\n\nfunction replace(src: any) {\n    \"use strict\";\n\n    return (_: any) => src;\n}\n\nexport class AnalyzerError extends DummyError {\n    constructor(message: string) {\n        super(message);\n        this.name = \"AnalyzerError\";\n        this.message = message;\n\n        if ((<any>Error).captureStackTrace) {\n            (<any>Error).captureStackTrace(this, AnalyzerError);\n        }\n    }\n}\n"]}
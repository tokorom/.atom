{"version":3,"file":"action.js","sourceRoot":"","sources":["action.ts"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport { Location, RuleName, ConcreatSyntaxTree } from \"../parser/parser\";\n\nexport interface PEGEnvironment {\n    text(): string;\n    location(): Location;\n}\n\nlet env: PEGEnvironment;\n\nfunction checkRuleName(ruleName: string): string {\n    \"use strict\";\n\n    // undefined or index 0 is invalid name\n    if (!(<any>RuleName)[ruleName]) {\n        throw new Error(`unknown rule: ${ruleName}`);\n    }\n\n    return ruleName;\n}\n\nexport function setup(_env: PEGEnvironment) {\n    \"use strict\";\n\n    env = _env;\n}\n\nexport function content(ruleName: string, c: any): ConcreatSyntaxTree {\n    \"use strict\";\n\n    return {\n        syntax: checkRuleName(ruleName),\n        location: env.location(),\n        content: c\n    };\n}\n\nexport function contents(ruleName: string, c: any, cc: any): ConcreatSyntaxTree {\n    \"use strict\";\n\n    let processed = [c];\n    if (cc) {\n        if (Array.isArray(cc.content)) {\n            cc.content.forEach((c: any) => processed.push(c));\n        } else {\n            processed.push(cc.content);\n        }\n    }\n    return {\n        syntax: checkRuleName(ruleName),\n        location: env.location(),\n        content: processed\n    };\n}\n\nexport function text(ruleName: string, text: string): ConcreatSyntaxTree {\n    \"use strict\";\n\n    return {\n        syntax: checkRuleName(ruleName),\n        location: env.location(),\n        text: text\n    };\n}\n\nexport function chapter(comments: any, headline: any, text: any): ConcreatSyntaxTree {\n    \"use strict\";\n\n    return {\n        syntax: checkRuleName(\"Chapter\"),\n        location: env.location(),\n        comments: comments,\n        headline: headline,\n        text: text\n    };\n}\n\nexport function headline(level: any, label: any, caption: any): ConcreatSyntaxTree {\n    \"use strict\";\n\n    return {\n        syntax: checkRuleName(\"Headline\"),\n        location: env.location(),\n        level: level.length,\n        label: label,\n        caption: caption\n    };\n}\n\nexport function blockElement(symbol: any, args: any, contents: any[] = []): ConcreatSyntaxTree {\n    \"use strict\";\n\n    return {\n        syntax: checkRuleName(\"BlockElement\"),\n        location: env.location(),\n        symbol: symbol,\n        args: args,\n        content: contents\n    };\n}\n\nexport function inlineElement(symbol: any, contents: any[] = []): ConcreatSyntaxTree {\n    \"use strict\";\n\n    return {\n        syntax: checkRuleName(\"InlineElement\"),\n        location: env.location(),\n        symbol: symbol,\n        content: contents\n    };\n}\n\nexport function column(headline: any, text: any): ConcreatSyntaxTree {\n    \"use strict\";\n\n    return {\n        syntax: checkRuleName(\"Column\"),\n        location: env.location(),\n        headline: headline,\n        text: text\n    };\n}\n\nexport function columnHeadline(level: any, caption: any): ConcreatSyntaxTree {\n    \"use strict\";\n\n    return {\n        syntax: checkRuleName(\"ColumnHeadline\"),\n        location: env.location(),\n        level: level.length,\n        caption: caption\n    };\n}\n\nexport function columnTerminator(level: any): ConcreatSyntaxTree {\n    \"use strict\";\n\n    return {\n        syntax: checkRuleName(\"ColumnTerminator\"),\n        location: env.location(),\n        level: level.length\n    };\n}\n\nexport function braceArg(arg: any): ConcreatSyntaxTree {\n    \"use strict\";\n\n    return {\n        syntax: checkRuleName(\"BraceArg\"),\n        location: env.location(),\n        arg: arg\n    };\n}\n\nexport function ulistElement(level: any, text: any): ConcreatSyntaxTree {\n    \"use strict\";\n\n    return {\n        syntax: checkRuleName(\"UlistElement\"),\n        location: env.location(),\n        level: level.length,\n        text: text\n    };\n}\n\nexport function olistElement(n: any, text: any): ConcreatSyntaxTree {\n    \"use strict\";\n\n    return {\n        syntax: checkRuleName(\"OlistElement\"),\n        location: env.location(),\n        no: parseInt(n, 10),\n        text: text\n    };\n}\n\nexport function dlistElement(text: any, content: any): ConcreatSyntaxTree {\n    \"use strict\";\n\n    return {\n        syntax: checkRuleName(\"DlistElement\"),\n        location: env.location(),\n        text: text,\n        content: content\n    };\n}\n"]}
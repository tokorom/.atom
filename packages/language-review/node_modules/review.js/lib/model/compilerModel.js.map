{"version":3,"file":"compilerModel.js","sourceRoot":"","sources":["compilerModel.ts"],"names":[],"mappings":"AAAA,8BAA8B;AAE9B,YAAY,CAAC;AAEb,qBAAkB,cAAc,CAAC,CAAA;AAOjC,uBAAsB,kBAAkB,CAAC,CAAA;AA4BzC;;GAEG;AACH,WAAY,WAAW;IACnB,6CAAI,CAAA;IACJ,mDAAO,CAAA;IACP,+CAAK,CAAA;AACT,CAAC,EAJW,mBAAW,KAAX,mBAAW,QAItB;AAJD,IAAY,WAAW,GAAX,mBAIX,CAAA;AAED;;GAEG;AACH;IACI,uBAAmB,KAAkB,EAAS,IAAyB,EAAS,OAA4B,EAAS,OAAe,EAAS,KAA0B;QAAjC,qBAAiC,GAAjC,UAAiC;QAApJ,UAAK,GAAL,KAAK,CAAa;QAAS,SAAI,GAAJ,IAAI,CAAqB;QAAS,YAAO,GAAP,OAAO,CAAqB;QAAS,YAAO,GAAP,OAAO,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAqB;IACvK,CAAC;IACL,oBAAC;AAAD,CAAC,AAHD,IAGC;AAHY,qBAAa,gBAGzB,CAAA;AAED;;GAEG;AACH;IAAA;QACI,YAAO,GAAoB,EAAE,CAAC;IAalC,CAAC;IAXG,0BAAI,GAAJ,UAAK,OAAe;QAChB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;IAChF,CAAC;IAED,0BAAI,GAAJ,UAAK,OAAe;QAChB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;IACnF,CAAC;IAED,2BAAK,GAAL,UAAM,OAAe;QACjB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;IACjF,CAAC;IACL,kBAAC;AAAD,CAAC,AAdD,IAcC;AAdY,mBAAW,cAcvB,CAAA;AAED;;GAEG;AACH;IAMI,iBAAmB,IAAkB,EAAS,OAA4B,EAAS,KAAoB;QAApF,SAAI,GAAJ,IAAI,CAAc;QAAS,YAAO,GAAP,OAAO,CAAqB;QAAS,UAAK,GAAL,KAAK,CAAe;QALvG,YAAO,GAAa,EAAE,CAAC;QACvB,iBAAY,GAAgC,EAAE,CAAC;QAC/C,iBAAY,GAAe,EAAE,CAAC;QACtB,aAAQ,GAAoB,EAAE,CAAC;IAGvC,CAAC;IAED,sBAAI,GAAJ,UAAK,OAAe;QAAE,eAAwB;aAAxB,WAAwB,CAAxB,sBAAwB,CAAxB,IAAwB;YAAxB,8BAAwB;;QAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;IACrG,CAAC;IAED,sBAAI,GAAJ,UAAK,OAAe;QAAE,eAAwB;aAAxB,WAAwB,CAAxB,sBAAwB,CAAxB,IAAwB;YAAxB,8BAAwB;;QAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;IACxG,CAAC;IAED,uBAAK,GAAL,UAAM,OAAe;QAAE,eAAwB;aAAxB,WAAwB,CAAxB,sBAAwB,CAAxB,IAAwB;YAAxB,8BAAwB;;QAC3C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;IACtG,CAAC;IAED,2BAAS,GAAT,UAAU,IAAY;QAClB,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACxC,EAAE,CAAC,CAAC,OAAO,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC;YACnC,SAAS,GAAG,CAAC,CAAC;QAClB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,SAAS,EAAE,CAAC;QAChB,CAAC;QACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;QACpC,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IAED,sBAAI,4BAAO;aAAX;YACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAC,CAAgB,EAAE,CAAgB;gBACzD,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC/C,MAAM,CAAC,CAAC,CAAC;gBACb,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC9B,MAAM,CAAC,CAAC,CAAC,CAAC;gBACd,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC9B,MAAM,CAAC,CAAC,CAAC;gBACb,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;gBAC/E,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;;;OAAA;IAED,2BAAS,GAAT,UAAU,MAAc;QACpB,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACxB,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;IAED,sBAAI,mCAAc;aAAlB;YACI,IAAI,MAAM,GAAa,EAAE,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,MAAM;gBACvB,EAAE,CAAC,CAAC,MAAM,CAAC,WAAW,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC;oBAC1D,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACxB,CAAC;YACL,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC;;;OAAA;IAMD,sCAAoB,GAApB,UAAqB,IAAS,EAAE,KAAa,EAAE,YAA0B,EAAE,SAAe;QAA3C,4BAA0B,GAA1B,eAAe,IAAI,CAAC,MAAM;QAAE,yBAAe,GAAf,eAAe;QACtF,IAAI,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACtC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC;gBACH,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;gBACrB,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC;gBACxB,YAAY,EAAE,YAAY;gBAC1B,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC;aACrB,CAAC;QACN,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC;gBACH,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,QAAQ,EAAE,CAAC,IAAI,CAAC,IAAI,IAAS,EAAE,CAAC,CAAC,IAAI;gBACrC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC;gBACxB,YAAY,EAAE,YAAY;gBAC1B,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC;aACrB,CAAC;QACN,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC;gBACH,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,QAAQ,EAAE,CAAC,IAAI,CAAC,IAAI,IAAS,EAAE,CAAC,CAAC,IAAI;gBACrC,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,WAAW,EAAE,CAAC,IAAI,CAAC,OAAO,IAAS,EAAE,CAAC,CAAC,IAAI;gBAC3C,YAAY,EAAE,YAAY;gBAC1B,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC;aACrB,CAAC;QACN,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,OAAO,GAAG,QAAC,CAAC,8BAA8B,EAAE,aAAa,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;YAChF,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YAC1B,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;IACL,CAAC;IAED,iCAAe,GAAf,UAAgB,IAAc;QAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,gCAAc,GAAd;QACI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,EAAE,EAAN,CAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IAC3B,CAAC;IACL,cAAC;AAAD,CAAC,AA3GD,IA2GC;AA3GY,eAAO,UA2GnB,CAAA;AAED;IAEI,wBAAmB,OAAgB,EAAS,IAAa;QAAtC,YAAO,GAAP,OAAO,CAAS;QAAS,SAAI,GAAJ,IAAI,CAAS;QAezD,WAAM,GAAW,EAAE,CAAC;IAdpB,CAAC;IAED,sBAAI,gCAAI;aAAR;YACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1C,CAAC;;;OAAA;IAED,sBAAI,gCAAI;aAAR;YACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1C,CAAC;;;OAAA;IAED,sBAAI,iCAAK;aAAT;YACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,CAAC;;;OAAA;IAID,4BAAG,GAAH,UAAI,IAAS;QACT,8BAA8B;QAC9B,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACzC,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,+BAAM,GAAN,UAAO,IAAS;QACZ,8BAA8B;QAC9B,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;QACpB,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,iCAAiC;IACjC,gCAAO,GAAP,UAAQ,IAAY;QAChB,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;QACjC,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,sBAAI,iCAAK;aAAT;YACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC3B,CAAC;;;OAAA;IAED,sBAAI,mCAAO;aAAX;YACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QAC7B,CAAC;;;OAAA;IAED,oCAAW,GAAX,UAAY,MAAc;QACtB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAQ,CAAC,IAAI,CAAC;QACnC,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAA,KAAK;YACnC,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YAC/D,EAAE,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;gBAClB,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;YACD,IAAI,OAAO,GAA6B,IAAW,CAAC;YACpD,cAAK,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE;gBAClB,eAAe,EAAE,UAAC,KAAK,EAAE,OAAO;oBAC5B,MAAM,CAAC,CAAC,OAAO,CAAC;gBACpB,CAAC;gBACD,eAAe,EAAE,UAAC,IAAI,EAAE,OAAO;oBAC3B,OAAO,GAAG,IAAI,CAAC;oBACf,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;aACJ,CAAC,CAAC;YACH,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;gBACpC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,MAAM,CAAC;YACjD,CAAC;YACD,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC;IAEJ;;;;;;OAMG;IACA,sCAAa,GAAb,UAAc,EAAU;QACpB,uDAAuD;QACvD,sCAAsC;QAF1C,iBAuDC;QAnDG,IAAI,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAG,CAAC,IAAI,CAAC,MAAM,CAAC;QAEjE,IAAI,YAAY,GAAa,EAAE,CAAC;QAChC,CAAC;YACG,IAAI,YAAY,GAAG,CAAC,SAAS,CAAC,CAAC;YAC/B,IAAI,WAAW,GAAG,CAAC,KAAI,CAAC,OAAO,CAAC,SAAS,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC;YACrD,IAAI,cAAc,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YACnC,IAAI,SAAS,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,OAAO,IAAI,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,iBAAiB;YAC7E,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;YAC/D,IAAI,iBAAiB,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACnC,IAAI,OAAO,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;YAC5C,YAAY,CAAC,OAAO,CAAC,UAAA,QAAQ;gBACzB,WAAW,CAAC,OAAO,CAAC,UAAA,OAAO;oBACvB,cAAc,CAAC,OAAO,CAAC,UAAA,UAAU;wBAC7B,iBAAiB,CAAC,OAAO,CAAC,UAAA,aAAa;4BACnC,OAAO,CAAC,OAAO,CAAC,UAAA,GAAG;gCACf,IAAI,QAAQ,GAAG,EAAE,CAAC;gCAClB,QAAQ,IAAI,QAAQ,CAAC;gCACrB,QAAQ,IAAI,OAAO,CAAC;gCACpB,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;oCACb,QAAQ,IAAI,SAAS,CAAC;oCACtB,QAAQ,IAAI,aAAa,CAAC;gCAC9B,CAAC;gCACD,QAAQ,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC;gCAC3B,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oCACxC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gCAChC,CAAC;4BACL,CAAC,CAAC,CAAC;wBACP,CAAC,CAAC,CAAC;oBACP,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,EAAE,CAAC;QACL,IAAI,OAAO,GAAG,IAAI,OAAO,CAAS,UAAC,OAAO,EAAE,MAAM;YAC9C,IAAI,eAAe,GAAG;gBAClB,EAAE,CAAC,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC5B,MAAM,CAAC,EAAE,CAAC,CAAC;oBACX,MAAM,CAAC;gBACX,CAAC;gBACD,IAAI,QAAQ,GAAG,YAAY,CAAC,KAAK,EAAI,CAAC;gBACtC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAA,MAAM;oBAC/B,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;wBAChB,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;wBACrB,MAAM,CAAC;oBACX,CAAC;oBACD,eAAe,EAAE,CAAC;gBACtB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC;YACF,eAAe,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IACL,qBAAC;AAAD,CAAC,AArID,IAqIC;AArIY,sBAAc,iBAqI1B,CAAA;AAED;;GAEG;AACH;IASI,cAAmB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QARjC,YAAO,GAAgB,IAAI,WAAW,EAAE,CAAC;QAGzC,WAAM,GAAmB,EAAE,CAAC;QAC5B,aAAQ,GAAmB,EAAE,CAAC;QAC9B,aAAQ,GAAmB,EAAE,CAAC;QAC9B,YAAO,GAAmB,EAAE,CAAC;IAG7B,CAAC;IAED,sBAAI,2BAAS;aAAb;YACI,IAAI,QAAQ,GAAmB,EAAE,CAAC;YAClC,IAAI,GAAG,GAAG,UAAC,KAAmB;gBAC1B,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACrB,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,GAAG,CAAC,KAAK,CAAC,EAAV,CAAU,CAAC,CAAC;YAC7C,CAAC,CAAC;YAEF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,GAAG,CAAC,KAAK,CAAC,EAAV,CAAU,CAAC,CAAC;YACzC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,GAAG,CAAC,KAAK,CAAC,EAAV,CAAU,CAAC,CAAC;YAC3C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,GAAG,CAAC,KAAK,CAAC,EAAV,CAAU,CAAC,CAAC;YAC3C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,GAAG,CAAC,KAAK,CAAC,EAAV,CAAU,CAAC,CAAC;YAE1C,MAAM,CAAC,QAAQ,CAAC;QACpB,CAAC;;;OAAA;IAED,sBAAI,yBAAO;aAAX;YACI,IAAI,OAAO,GAAoB,EAAE,CAAC;YAClC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAC/C,IAAI,aAAa,GAAG,UAAC,KAAmB;gBACpC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAChD,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,aAAa,CAAC,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;YACvD,CAAC,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,aAAa,CAAC,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;YACnD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,aAAa,CAAC,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;YACrD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,aAAa,CAAC,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,aAAa,CAAC,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;YACpD,MAAM,CAAC,OAAO,CAAC;QACnB,CAAC;;;OAAA;IAED,sBAAI,0BAAQ;aAAZ;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,KAAK,KAAK,WAAW,CAAC,KAAK,EAAlC,CAAkC,CAAC,CAAC;QAC3E,CAAC;;;OAAA;IAED,sBAAI,4BAAU;aAAd;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,KAAK,KAAK,WAAW,CAAC,OAAO,EAApC,CAAoC,CAAC,CAAC;QAC7E,CAAC;;;OAAA;IACL,WAAC;AAAD,CAAC,AAhDD,IAgDC;AAhDY,YAAI,OAgDhB,CAAA;AAED;IAgBI,sBAAmB,IAAU,EAAE,MAAW,EAAE,IAAU;QAAnC,SAAI,GAAJ,IAAI,CAAM;QAd7B,UAAK,GAAmB,EAAE,CAAC;QAQ3B,qBAAgB,GAAqB,EAAE,CAAC;QAOpC,EAAE,CAAC,CAAC,MAAM,YAAY,YAAY,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACrB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACrB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACvB,CAAC;QAED,IAAI,IAAI,GAAiB,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC;QAChD,IAAI,OAAO,GAAiB,IAAI,CAAC,CAAC,sCAAsC;QACxE,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;IACpD,CAAC;IAED,sBAAI,+BAAK;aAAT;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;aAED,UAAU,KAAa;YACnB,WAAW;YACX,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QAC/B,CAAC;;;OANA;IAQD,2CAAoB,GAApB,UAAqB,OAAgB;QACjC,IAAI,cAAc,GAAG,IAAI,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/D,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC3C,MAAM,CAAC,cAAc,CAAC;IAC1B,CAAC;IAMD,0CAAmB,GAAnB,UAAoB,OAAY;QAC5B,IAAI,MAAwB,CAAC;QAC7B,EAAE,CAAC,CAAC,OAAO,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC9B,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,OAAO,CAAC,IAAI,KAAK,OAAO,EAAhC,CAAgC,CAAC,CAAC;QACvF,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,OAAO,KAAK,OAAO,EAA3B,CAA2B,CAAC,CAAC;QAClF,CAAC;QACD,2BAA2B;QAC3B,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IAC5B,CAAC;IACL,mBAAC;AAAD,CAAC,AA7DD,IA6DC;AA7DY,oBAAY,eA6DxB,CAAA","sourcesContent":["// parser/ と builder/ で共用するモデル\n\n\"use strict\";\n\nimport { t } from \"../i18n/i18n\";\n\nimport { ConcreatSyntaxTree, NodeLocation, SyntaxTree, InlineElementSyntaxTree, BlockElementSyntaxTree, ChapterSyntaxTree } from \"../parser/parser\";\n\nimport { AcceptableSyntaxes } from \"../parser/analyzer\";\nimport { Builder } from \"../builder/builder\";\nimport { Config } from \"../controller/config\";\nimport { visit } from \"../parser/walker\";\n\n/**\n * 参照先についての情報。\n */\nexport interface ReferenceTo {\n    part?: ContentChunk | null;\n    partName: string;\n    chapter?: ContentChunk | null;\n    chapterName: string;\n    targetSymbol: string;\n    label: string;\n    // 上記情報から解決した結果のNode\n    referenceNode?: SyntaxTree;\n}\n\n/**\n * シンボルについての情報。\n */\nexport interface Symbol {\n    part?: ContentChunk;\n    chapter?: ContentChunk | null;\n    symbolName: string;\n    labelName?: string;\n    referenceTo?: ReferenceTo | null;\n    node: SyntaxTree;\n}\n\n/**\n * 処理時に発生したレポートのレベル。\n */\nexport enum ReportLevel {\n    Info,\n    Warning,\n    Error\n}\n\n/**\n * 処理時に発生したレポート。\n */\nexport class ProcessReport {\n    constructor(public level: ReportLevel, public part: ContentChunk | null, public chapter: ContentChunk | null, public message: string, public nodes: NodeLocation[] = []) {\n    }\n}\n\n/**\n * コンパイル処理時の出力ハンドリング。\n */\nexport class BookProcess {\n    reports: ProcessReport[] = [];\n\n    info(message: string) {\n        this.reports.push(new ProcessReport(ReportLevel.Info, null, null, message));\n    }\n\n    warn(message: string) {\n        this.reports.push(new ProcessReport(ReportLevel.Warning, null, null, message));\n    }\n\n    error(message: string) {\n        this.reports.push(new ProcessReport(ReportLevel.Error, null, null, message));\n    }\n}\n\n/**\n * コンパイル処理時の出力ハンドリング。\n */\nexport class Process {\n    symbols: Symbol[] = [];\n    indexCounter: { [kind: string]: number; } = {};\n    afterProcess: Function[] = [];\n    private _reports: ProcessReport[] = [];\n\n    constructor(public part: ContentChunk, public chapter: ContentChunk | null, public input: string | null) {\n    }\n\n    info(message: string, ...nodes: NodeLocation[]) {\n        this._reports.push(new ProcessReport(ReportLevel.Info, this.part, this.chapter, message, nodes));\n    }\n\n    warn(message: string, ...nodes: NodeLocation[]) {\n        this._reports.push(new ProcessReport(ReportLevel.Warning, this.part, this.chapter, message, nodes));\n    }\n\n    error(message: string, ...nodes: NodeLocation[]) {\n        this._reports.push(new ProcessReport(ReportLevel.Error, this.part, this.chapter, message, nodes));\n    }\n\n    nextIndex(kind: string) {\n        let nextIndex = this.indexCounter[kind];\n        if (typeof nextIndex === \"undefined\") {\n            nextIndex = 1;\n        } else {\n            nextIndex++;\n        }\n        this.indexCounter[kind] = nextIndex;\n        return nextIndex;\n    }\n\n    get reports(): ProcessReport[] {\n        return this._reports.sort((a: ProcessReport, b: ProcessReport) => {\n            if (a.nodes.length === 0 && b.nodes.length === 0) {\n                return 0;\n            } else if (a.nodes.length === 0) {\n                return -1;\n            } else if (b.nodes.length === 0) {\n                return 1;\n            } else {\n                return a.nodes[0].location.start.offset - b.nodes[0].location.start.offset;\n            }\n        });\n    }\n\n    addSymbol(symbol: Symbol) {\n        symbol.part = this.part;\n        symbol.chapter = this.chapter;\n        this.symbols.push(symbol);\n    }\n\n    get missingSymbols(): Symbol[] {\n        let result: Symbol[] = [];\n        this.symbols.forEach(symbol => {\n            if (symbol.referenceTo && !symbol.referenceTo.referenceNode) {\n                result.push(symbol);\n            }\n        });\n        return result;\n    }\n\n    constructReferenceTo(node: InlineElementSyntaxTree, value: string, targetSymbol?: string, separator?: string): ReferenceTo | null;\n\n    constructReferenceTo(node: BlockElementSyntaxTree, value: string, targetSymbol: string, separator?: string): ReferenceTo | null;\n\n    constructReferenceTo(node: any, value: string, targetSymbol = node.symbol, separator = \"|\"): ReferenceTo | null {\n        let splitted = value.split(separator);\n        if (splitted.length === 3) {\n            return {\n                partName: splitted[0],\n                chapterName: splitted[1],\n                targetSymbol: targetSymbol,\n                label: splitted[2]\n            };\n        } else if (splitted.length === 2) {\n            return {\n                part: this.part,\n                partName: (this.part || <any>{}).name,\n                chapterName: splitted[0],\n                targetSymbol: targetSymbol,\n                label: splitted[1]\n            };\n        } else if (splitted.length === 1) {\n            return {\n                part: this.part,\n                partName: (this.part || <any>{}).name,\n                chapter: this.chapter,\n                chapterName: (this.chapter || <any>{}).name,\n                targetSymbol: targetSymbol,\n                label: splitted[0]\n            };\n        } else {\n            let message = t(\"compile.args_length_mismatch\", \"1 or 2 or 3\", splitted.length);\n            this.error(message, node);\n            return null;\n        }\n    }\n\n    addAfterProcess(func: Function) {\n        this.afterProcess.push(func);\n    }\n\n    doAfterProcess() {\n        this.afterProcess.forEach((func) => func());\n        this.afterProcess = [];\n    }\n}\n\nexport class BuilderProcess {\n\n    constructor(public builder: Builder, public base: Process) {\n    }\n\n    get info(): (message: string, ...nodes: SyntaxTree[]) => void {\n        return this.base.info.bind(this.base);\n    }\n\n    get warn(): (message: string, ...nodes: SyntaxTree[]) => void {\n        return this.base.warn.bind(this.base);\n    }\n\n    get error(): (message: string, ...nodes: SyntaxTree[]) => void {\n        return this.base.error.bind(this.base);\n    }\n\n    result: string = \"\";\n\n    out(data: any): BuilderProcess {\n        // 最近のブラウザだと単純結合がアホみたいに早いらしいので\n        this.result += this.builder.escape(data);\n        return this;\n    }\n\n    outRaw(data: any): BuilderProcess {\n        // 最近のブラウザだと単純結合がアホみたいに早いらしいので\n        this.result += data;\n        return this;\n    }\n\n    // TODO pushOut いみふ感高いのでやめよう 削除だ！\n    pushOut(data: string): BuilderProcess {\n        this.result = data + this.result;\n        return this;\n    }\n\n    get input(): string | null {\n        return this.base.input;\n    }\n\n    get symbols(): Symbol[] {\n        return this.base.symbols;\n    }\n\n    findChapter(chapId: string): ContentChunk {\n        let book = this.base.chapter!.book;\n        let chaps = book.allChunks.filter(chunk => {\n            let name = chunk.name.substr(0, chunk.name.lastIndexOf(\".re\"));\n            if (name === chapId) {\n                return true;\n            }\n            let chapter: ChapterSyntaxTree | null = null as any;\n            visit(chunk.tree.ast, {\n                visitDefaultPre: (_node, _parent) => {\n                    return !chapter;\n                },\n                visitChapterPre: (node, _parent) => {\n                    chapter = node;\n                    return false;\n                }\n            });\n            if (chapter && chapter.headline.label) {\n                return chapter.headline.label.arg === chapId;\n            }\n            return false;\n        });\n        return chaps[0];\n    }\n\n\t/**\n\t * 指定されたidの画像を探す。\n\t * 解決ルールは https://github.com/kmuto/review/wiki/ImagePath の通り。\n\t * Config側で絶対パス化やリソースの差し替えを行う可能性があるため、このメソッドの返り値は無加工で使うこと。\n\t * @param id\n\t * @returns {Promise<string>}\n\t */\n    findImageFile(id: string): Promise<string> {\n        // NOTE: https://github.com/kmuto/review/wiki/ImagePath\n        // 4軸マトリクス 画像dir, ビルダ有無, chapId位置, 拡張子\n\n        let config = (this.base.part || this.base.chapter) !.book.config;\n\n        let fileNameList: string[] = [];\n        (() => {\n            let imageDirList = [\"images/\"];\n            let builderList = [this.builder.extention + \"/\", \"\"];\n            let chapSwitchList = [true, false];\n            let chunkName = (this.base.chapter || this.base.part).name; // TODO もっと頭良い感じに\n            chunkName = chunkName.substring(0, chunkName.lastIndexOf(\".\"));\n            let chapSeparatorList = [\"/\", \"-\"];\n            let extList = [\"png\", \"jpg\", \"jpeg\", \"gif\"];\n            imageDirList.forEach(imageDir => {\n                builderList.forEach(builder => {\n                    chapSwitchList.forEach(chapSwitch => {\n                        chapSeparatorList.forEach(chapSeparator => {\n                            extList.forEach(ext => {\n                                let fileName = \"\";\n                                fileName += imageDir;\n                                fileName += builder;\n                                if (chapSwitch) {\n                                    fileName += chunkName;\n                                    fileName += chapSeparator;\n                                }\n                                fileName += id + \".\" + ext;\n                                if (fileNameList.indexOf(fileName) === -1) {\n                                    fileNameList.push(fileName);\n                                }\n                            });\n                        });\n                    });\n                });\n            });\n        })();\n        let promise = new Promise<string>((resolve, reject) => {\n            let checkFileExists = () => {\n                if (fileNameList.length === 0) {\n                    reject(id);\n                    return;\n                }\n                let fileName = fileNameList.shift() !;\n                config.exists(fileName).then(result => {\n                    if (result.result) {\n                        resolve(result.path);\n                        return;\n                    }\n                    checkFileExists();\n                });\n            };\n            checkFileExists();\n        });\n        return promise;\n    }\n}\n\n/**\n * 本全体を表す。\n */\nexport class Book {\n    process: BookProcess = new BookProcess();\n    acceptableSyntaxes: AcceptableSyntaxes;\n\n    predef: ContentChunk[] = [];\n    contents: ContentChunk[] = [];\n    appendix: ContentChunk[] = [];\n    postdef: ContentChunk[] = [];\n\n    constructor(public config: Config) {\n    }\n\n    get allChunks(): ContentChunk[] {\n        let tmpArray: ContentChunk[] = [];\n        let add = (chunk: ContentChunk) => {\n            tmpArray.push(chunk);\n            chunk.nodes.forEach(chunk => add(chunk));\n        };\n\n        this.predef.forEach(chunk => add(chunk));\n        this.contents.forEach(chunk => add(chunk));\n        this.appendix.forEach(chunk => add(chunk));\n        this.postdef.forEach(chunk => add(chunk));\n\n        return tmpArray;\n    }\n\n    get reports(): ProcessReport[] {\n        let results: ProcessReport[] = [];\n        results = results.concat(this.process.reports);\n        let gatherReports = (chunk: ContentChunk) => {\n            results = results.concat(chunk.process.reports);\n            chunk.nodes.forEach(chunk => gatherReports(chunk));\n        };\n        this.predef.forEach(chunk => gatherReports(chunk));\n        this.contents.forEach(chunk => gatherReports(chunk));\n        this.appendix.forEach(chunk => gatherReports(chunk));\n        this.postdef.forEach(chunk => gatherReports(chunk));\n        return results;\n    }\n\n    get hasError(): boolean {\n        return this.reports.some(report => report.level === ReportLevel.Error);\n    }\n\n    get hasWarning(): boolean {\n        return this.reports.some(report => report.level === ReportLevel.Warning);\n    }\n}\n\nexport class ContentChunk {\n    parent: ContentChunk;\n    nodes: ContentChunk[] = [];\n\n    no: number;\n    name: string;\n    _input: string; // TODO get, set やめる\n    tree: { ast: SyntaxTree; cst: ConcreatSyntaxTree; };\n\n    process: Process;\n    builderProcesses: BuilderProcess[] = [];\n\n    constructor(book: Book, parent: ContentChunk | null, name: string);\n\n    constructor(book: Book, name: string);\n\n    constructor(public book: Book, parent: any, name?: any) {\n        if (parent instanceof ContentChunk) {\n            this.parent = parent;\n            this.name = name;\n        } else if (typeof name === \"string\") {\n            this.name = name;\n        } else {\n            this.name = parent;\n        }\n\n        let part: ContentChunk = parent ? parent : null;\n        let chapter: ContentChunk = this; // TODO thisがpartでchapterが無しの場合もあるよ…！！\n        this.process = new Process(part, chapter, null);\n    }\n\n    get input() {\n        return this._input;\n    }\n\n    set input(value: string) {\n        // TODO やめる\n        this._input = value;\n        this.process.input = value;\n    }\n\n    createBuilderProcess(builder: Builder): BuilderProcess {\n        let builderProcess = new BuilderProcess(builder, this.process);\n        this.builderProcesses.push(builderProcess);\n        return builderProcess;\n    }\n\n    findResultByBuilder(builderName: string): string;\n\n    findResultByBuilder(builder: Builder): string;\n\n    findResultByBuilder(builder: any): string {\n        let founds: BuilderProcess[];\n        if (typeof builder === \"string\") {\n            founds = this.builderProcesses.filter(process => process.builder.name === builder);\n        } else {\n            founds = this.builderProcesses.filter(process => process.builder === builder);\n        }\n        // TODO 何かエラー投げたほうがいい気もするなー\n        return founds[0].result;\n    }\n}\n"]}